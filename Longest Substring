import java.util.*;

class Main{
public static String findLongestSubstring(String str)
{
	int i;
	int n = str.length();
	int st = 0; //Starting point of currrent substring
	int currlen = 0; //Length of current substring
	int maxlen = 0; //Max length substring
	int start = 0; //Starting index of max length substring
	
	HashMap<Character,Integer> map = new HashMap<>();
	
	map.put(str.charAt(0), 0);
	for (i = 1; i < n; i++)
	{
		if (!map.containsKey(str.charAt(i)))
		{
			map.put(str.charAt(i), i);
		}
		else
		{
			if (map.get(str.charAt(i)) >= st)
			{
				currlen = i - st;
				if (maxlen < currlen)
				{
	     			maxlen = currlen;
		    		start = st;
				}
				st = map.get(str.charAt(i)) + 1;
			}
			map.replace(str.charAt(i), i);
		}
	}
	if (maxlen < i - st)
	{
		maxlen = i - st;
		start = st;
	}
	return str.substring(start, start + maxlen);
}
public static void main(String[] args)
{
	String str = "laaassdd";
	System.out.print(findLongestSubstring(str));
}
}

// This code is contributed by divyeshrabadiya07
